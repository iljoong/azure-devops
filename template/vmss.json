{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmssName": {
            "type": "string",
            "defaultValue": "vmss"
        },
        "vmSku": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3"
        },
        "instanceCount": {
            "type": "int",
            "defaultValue": 1
        },
        "vnetname": {
            "type": "string"
        },
        "subnetname": {
            "type": "string"
        },
        "ilbip": {
            "type": "string"
        },
        "subnet": {
            "type": "string"
        },
        "adminUsername": {
            "type": "string"
        },
        "adminPassword": {
            "type": "securestring"
        },
        "imageId": {
            "type": "string"
        },
        "vaultResourceId": {
            "type": "string"
        },
        "certificateUrl": {
            "type": "string"
        },
        "scriptUrl": {
            "type": "string"
        },
        "appsettingsUrl": {
            "type": "string"
        },
        "thumbprint": {
            "type": "string"
        },
        "identityName": {
            "type": "string"
        }
    },
    "variables": {
        "pipName": "[concat(parameters('vmssName'), '-pip')]",
        "vnetName": "[parameters('vnetname')]",
        "subnetName": "[parameters('subnetname')]",
        "subnet": "[parameters('subnet')]",
        "namingInfix": "[toLower(substring(concat(parameters('vmssName'), uniqueString(resourceGroup().id)), 0, 9))]",
        "networkApiVersion": "2018-01-01",
        "storageApiVersion": "2017-10-01",
        "computeApiVersion": "2018-06-01",
        "autoscaleApiVersion": "2015-04-01",
        "loadBalancerName": "[concat(parameters('vmssName'), 'Elb')]",
        "loadBalancerId": "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]",
        "networkSecurityGroupName": "[concat(parameters('vmssName'), 'nsg')]",
        "location": "[resourceGroup().location]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/', variables('subnetName'))]",
        "scriptFile": "[substring(parameters('scriptUrl'), add(lastIndexOf(parameters('scripturl'), '/'), 1))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/loadBalancers",
            "sku": {
                "name": "Standard"
            },
            "name": "[variables('loadBalancerName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('pipName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "bepool"
                    }
                ],
                "inboundNatPools": [
                    {
                        "name": "natpool-rdp",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(variables('loadBalancerId'), '/frontendIPConfigurations/loadBalancerFrontEnd')]"
                            },
                            "protocol": "Tcp",
                            "frontendPortRangeStart": 22001,
                            "frontendPortRangeEnd": 22119,
                            "backendPort": 3389
                        }
                    },
                    {
                        "name": "natpool-winrm",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(variables('loadBalancerId'), '/frontendIPConfigurations/loadBalancerFrontEnd')]"
                            },
                            "protocol": "Tcp",
                            "frontendPortRangeStart": 23001,
                            "frontendPortRangeEnd": 23119,
                            "backendPort": 5986
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "tcpProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    },
                    {
                        "name": "httpProbe",
                        "properties": {
                            "protocol": "Http",
                            "port": 80,
                            "requestPath": "/health",
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LBRule",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(variables('loadBalancerId'), '/frontendIPConfigurations/loadBalancerFrontEnd')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(variables('loadBalancerId'),'/backendAddressPools/bepool')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[concat(variables('loadBalancerId'),'/probes/tcpProbe')]"
                            }
                        }
                    },
                    {
                        "name": "LBRuleHttps",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(variables('loadBalancerId'), '/frontendIPConfigurations/loadBalancerFrontEnd')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(variables('loadBalancerId'),'/backendAddressPools/bepool')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 443,
                            "backendPort": 443,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[concat(variables('loadBalancerId'),'/probes/tcpProbe')]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('pipName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "Standard"
            },
            "name": "[variables('pipName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroupName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allowRDP",
                        "properties": {
                            "description": "Allow RDP traffic",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allowWinRM",
                        "properties": {
                            "description": "Allow WinRM traffic",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "5986",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 2000,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allowHTTP",
                        "properties": {
                            "description": "Allow web traffic",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 3000,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allowHTTPS",
                        "properties": {
                            "description": "Allow HTTPS traffic",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 3001,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "name": "[concat(variables('vnetName'), '/', variables('subnetName'))]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[variables('location')]",
            "properties": {
                "addressPrefix": "[variables('subnet')]",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "sku": {
                "name": "[parameters('vmSku')]",
                "tier": "Standard",
                "capacity": "[parameters('instanceCount')]"
            },
            "name": "[parameters('vmssName')]",
            "apiVersion": "[variables('computeApiVersion')]",
            "location": "[variables('location')]",
            "identity": {
                "type": "userAssigned",
                "userAssignedIdentities": {
                    "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',parameters('identityName'))]": {}
                }
            },
            "properties": {
                "overprovision": false,
                "upgradePolicy": {
                    "mode": "Rolling",
                    "rollingUpgradePolicy": {
                        "maxBatchInstancePercent": 20,
                        "maxUnhealthyInstancePercent": 20,
                        "maxUnhealthyUpgradedInstancePercent": 20,
                        "pauseTimeBetweenBatches": "PT0S"
                    }
                },
                "virtualMachineProfile": {
                    "storageProfile": {
                        "imageReference": {
                            "id": "[parameters('imageId')]"
                        },
                        "osDisk": {
                            "createOption": "FromImage",
                            "caching": "ReadWrite"
                        }
                    },
                    "osProfile": {
                        "computerNamePrefix": "[variables('namingInfix')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPassword')]",
                        "secrets": [
                            {
                                "sourceVault": {
                                    "id": "[parameters('vaultResourceId')]"
                                },
                                "vaultCertificates": [
                                    {
                                        "certificateUrl": "[parameters('certificateUrl')]",
                                        "certificateStore": "My"
                                    }
                                ]
                            }
                        ],
                        "windowsConfiguration": {
                            "provisionVMAgent": true,
                            "winRM": {
                                "listeners": [
                                    {
                                        "protocol": "Http"
                                    },
                                    {
                                        "protocol": "Https",
                                        "certificateUrl": "[parameters('certificateUrl')]"
                                    }
                                ]
                            },
                            "enableAutomaticUpdates": true
                        }
                    },
                    "networkProfile": {
                        "healthProbe": {
                            "id": "[concat(variables('loadBalancerId'),'/probes/tcpProbe')]"
                        },
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[concat(parameters('vmssName'), 'Nic')]",
                                "properties": {
                                    "enableIPForwarding": true,
                                    "primary": true,
                                    "ipConfigurations": [
                                        {
                                            "name": "[concat(parameters('vmssName'), 'IpConfig')]",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[concat(variables('vnetID'),'/subnets/', variables('subnetName'))]"
                                                },
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[reference(variables('loadBalancerName'), variables('networkApiVersion')).backendAddressPools[0].id]"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "[reference(variables('loadBalancerName'), variables('networkApiVersion')).inboundNatPools[0].id]"
                                                    },
                                                    {
                                                        "id": "[reference(variables('loadBalancerName'), variables('networkApiVersion')).inboundNatPools[1].id]"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "CustomScriptExtension",
                                "properties": {
                                    "publisher": "Microsoft.Compute",
                                    "type": "CustomScriptExtension",
                                    "typeHandlerVersion": "1.9",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "fileUris": [
                                            "[parameters('scriptUrl')]",
                                            "[parameters('appsettingsUrl')]"
                                        ],
                                        "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('scriptFile'), ' -thumbprint ', parameters('thumbprint'))]"
                                    }
                                }
                            }
                        ]
                    }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
            ]
        }
    ]
}
